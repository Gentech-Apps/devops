# This is a basic workflow to help you get started with Actions
name: K8s-deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    tags:
    - 'prod-*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:

    name: k8s-deployment
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Get tag name
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}

    # Setup aws credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Retag latest to production image to Amazon ECR
      uses: abronin/ecr-retag-action@v1
      with:
        repository: example-production-be
        tag: latest
        new-tags: ${{ env.RELEASE_VERSION }}

    - name: Install and configure kubectl
      run: |
        VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
        # https://github.com/aws/aws-cli/issues/6920#issuecomment-1117981158
        VERSION=v1.23.6
        curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
          --progress-bar \
          --location \
          --remote-name
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Deploy Application
      env:
        ECR_REGISTRY: 517522160898.dkr.ecr.eu-west-1.amazonaws.com
        ECR_REPOSITORY: example-production-be
        IMAGE_TAG: ${{ env.RELEASE_VERSION }}
      run: |
        echo assigned tag $IMAGE_TAG
        aws eks update-kubeconfig --name example-production
        kubectl get pods -o wide
        kubectl set image deployment/example-be example-be=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        kubectl rollout status deployment example-be
